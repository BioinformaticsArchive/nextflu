

def partition_string(string, length):
    return list(string[0+i:length+i] for i in range(0, len(string), length))

def translate(nuc):
	"""Translate nucleotide sequence to amino acid"""
	
	to_aa = {}
	to_aa["TTT"] = "F"
	to_aa["TTC"] = "F"
	to_aa["TTA"] = "L"
	to_aa["TTG"] = "L"

	to_aa["CTT"] = "L"
	to_aa["CTC"] = "L"
	to_aa["CTA"] = "L"
	to_aa["CTG"] = "L"

	to_aa["ATT"] = "I"
	to_aa["ATC"] = "I"
	to_aa["ATA"] = "I"
	to_aa["ATG"] = "M"

	to_aa["GTT"] = "V"
	to_aa["GTC"] = "V"
	to_aa["GTA"] = "V"
	to_aa["GTG"] = "V"

	to_aa["TCT"] = "S"
	to_aa["TCC"] = "S"
	to_aa["TCA"] = "S"
	to_aa["TCG"] = "S"

	to_aa["CCT"] = "P"
	to_aa["CCC"] = "P"
	to_aa["CCA"] = "P"
	to_aa["CCG"] = "P"

	to_aa["ACT"] = "T"
	to_aa["ACC"] = "T"
	to_aa["ACA"] = "T"
	to_aa["ACG"] = "T"

	to_aa["GCT"] = "A"
	to_aa["GCC"] = "A"
	to_aa["GCA"] = "A"
	to_aa["GCG"] = "A"

	to_aa["TAT"] = "Y"
	to_aa["TAC"] = "Y"
	to_aa["TAA"] = "X"
	to_aa["TAG"] = "X"

	to_aa["CAT"] = "H"
	to_aa["CAC"] = "H"
	to_aa["CAA"] = "Q"
	to_aa["CAG"] = "Q"

	to_aa["AAT"] = "N"
	to_aa["AAC"] = "N"
	to_aa["AAA"] = "K"
	to_aa["AAG"] = "K"

	to_aa["GAT"] = "D"
	to_aa["GAC"] = "D"
	to_aa["GAA"] = "E"
	to_aa["GAG"] = "E"

	to_aa["TGT"] = "C"
	to_aa["TGC"] = "C"
	to_aa["TGA"] = "X"
	to_aa["TGG"] = "W"

	to_aa["CGT"] = "R"
	to_aa["CGC"] = "R"
	to_aa["CGA"] = "R"
	to_aa["CGG"] = "R"

	to_aa["AGT"] = "S"
	to_aa["AGC"] = "S"
	to_aa["AGA"] = "R"
	to_aa["AGG"] = "R"

	to_aa["GGT"] = "G"
	to_aa["GGC"] = "G"
	to_aa["GGA"] = "G"
	to_aa["GGG"] = "G"
	
	partitions = partition_string(nuc, 3)
	aa = ''.join([to_aa[codon] for codon in partitions])
	return aa
	
def epitope_sites(aa):
	zipped = zip(aa, EPITOPE_MASK)
	epi = ""
	for n in zipped:
		if n[1] == '1':
			epi += n[0]
	return epi
	
def nonepitope_sites(aa):
	zipped = zip(aa, EPITOPE_MASK)
	epi = ""
	for n in zipped:
		if n[1] == '0':
			epi += n[0]
	return epi	
	
def main():
	nuc = "ATGAAGACTATCATTGCTTTGAGCTACATTTTATGTCTGGTTTTCGCTCAAAAACTTCCCGGAAATGACAACAGCACAGCAACGCTGTGCCTGGGACATCATGCAGTGCCAAACGGAACGCTAGTGAAAACAATCACGAATGATCAAATTGAAGTGACTAATGCTACTGAGCTGGTTCAGAGTTCCTCAACAGGTAGAATATGCGACAGTCCTCACCGAATCCTTGATGGAAAAAACTGCACACTGATAGATGCTCTATTGGGAGACCCTCATTGTGATGGCTTCCAAAATAAGGAATGGGACCTTTTTGTTGAACGCAGCAAAGCTTACAGCAACTGTTACCCTTATGATGTACCGGATTATGCCTCCCTTAGGTCACTAGTTGCCTCATCAGGCACCCTGGAGTTTATCAATGAAGACTTCAATTGGACTGGAGTCGCTCAGGATGGGGGAAGCTATGCTTGCAAAAGGGGATCTGTTAACAGTTTCTTTAGTAGATTGAATTGGTTGCACAAATCAGAATACAAATATCCAGCGCTGAACGTGACTATGCCAAACAATGGCAAATTTGACAAATTGTACATTTGGGGGGTTCACCACCCGAGCACGGACAGAGACCAAACCAGCCTATATGTTCGAGCATCAGGGAGAGTCACAGTCTCTACCAAAAGAAGCCAACAAACTGTAACCCCGAATATCGGGTCTAGACCCTGGGTAAGGGGTCAGTCCAGTAGAATAAGCATCTATTGGACAATAGTAAAACCGGGAGACATACTTTTGATTAATAGCACAGGGAATCTAATTGCTCCTCGGGGTTACTTCAAAATACGAAATGGGAAAAGCTCAATAATGAGGTCAGATGCACCCATTGGCACCTGCAGTTCTGAATGCATCACTCCAAATGGAAGCATTCCCAATGACAAACCTTTTCAAAATGTAAACAGGATCACATATGGGGCCTGCCCCAGATATGTTAAGCAAAACACT"
	aa = translate(nuc)
	ep = epitope_sites(aa)
	ne = nonepitope_sites(aa)	
	print "nuc: " + nuc
	print "aa: " + aa
	print "ep: " + ep
	print "ne: " + ne

if __name__ == "__main__":
    main()